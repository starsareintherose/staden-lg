#
# Makefile for ted (trace editor) - DEC Ultrix
#

#
#Turning on the AUTO_CLIP switch allows ted to automatically
#select a left (using the -enzyme option or the .enzyme in the
#Xted file) and right cutoff on your sequence (using 2 out of
#5 N's)
#
# Turning on the SAVE_EDITS switch allows the user to maintain
# copies of their edits, i.e. when you open up ted on a file
# that you have already edited, the old edits show up in the
# ted edit window.  The user may also call up any of their
# past editing sessions.  
#
#Turning on the DEF_OUT  switch makes
# trace_name.seq the default output file name
#
#SWITCHES = -DAUTO_CLIP  -DDEF_OUT  -DSAVE_EDITS
SWITCHES = -DAUTO_CLIP

#
# Programs made by this makefile
#
PROGS = ted

#
# Where the wild things are
#
SRC = .

#
# Compiler - debug on
#
CC= c89
INCLUDES = -I$(SRC) -I/usr/include/mit
CFLAGS= -g -common $(SWITCHES) $(INCLUDES)
LIBS= -lXaw -lXt -lXmu -lXext -lX11
#
# If you have gcc-2.x, should link with it
LD= c89
LDFLAGS= -g
# cc -Bstatic, gcc2.x -static, otherwise nothing
LDLIBS= $(LIBS)

#
# Object files
#
TEDOBJS=\
	ted.o\
	dialogues.o\
	seq.o\
	seqIOPlain.o\
	seqIOABI.o\
	help.o\
	display.o\
	traceDisplay.o\
	basesDisplay.o\
	Graph.o\
	seqIOEdit.o\
	seqIOALF.o\
	seqIOSCF.o\
	seqOutput.o\
	opp.o\
	info.o\
	fpoint.o\
	mach-io.o\
	seqRead.o


#
# Linking
#
ted: $(TEDOBJS)
	$(LD) $(LDFLAGS) -o $@ $(TEDOBJS) $(LDLIBS)

#
# Files requiring simple C compilation (thing.c -> thing.o)
# 
%.o : $(SRC)/%.c
	$(CC) $(CFLAGS) -c $<


#
# Special dependencies
#
clean:
	rm -f ted $(TEDOBJS) *~ *.aux *.log *.bbl *.blg *.dvi *.ps

all: $(PROGS)

